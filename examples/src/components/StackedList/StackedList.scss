////
/// Components
/// StackedList
////

@import '../../styles/utilities/layout';
@import '../Handle/props';
@import '../Halftone/props';

$stacked-list-header-padding-top: get-spacing(tighter) + ($border-size-unit / 2);
$stacked-list-header-padding-bottom: get-spacing(tighter) + $border-size-unit;

.StackedListWrapper {
  @include centered-width(columns(4));
}

.StackedListHeader {
  padding: $stacked-list-header-padding-top get-spacing(tighter) $stacked-list-header-padding-bottom;
  background-color: get-color(coal, dark);
}

.StackedListItem {
  cursor: get-cursor();
  margin-top: -$border-size-unit;
}

.StackedListContent {
  position: relative;
  padding: get-spacing(tighter);
  color: get-color(coal, dark);
  background-color: white;
  border: $border-size-unit solid get-color(coal, dark); // get-border();
  transition:
    color get-duration(fast) get-easing(),
    background-color get-duration(fast) get-easing(),
    border-color get-duration(fast) get-easing(),
    transform get-duration() get-easing(bungie);

  &::before {
    content: '';
    position: absolute;
    top: -$border-size-unit;
    right: -$border-size-unit;
    left: -$border-size-unit;
    display: block;
    height: $border-size-unit;
    background-color: get-color(coal, dark);
    opacity: 0;
    transition:
      background-color get-duration(fast) get-easing(),
      opacity get-duration(fast) get-easing();
  }

  .DragHandle,
  .NopeHandle {
    position: absolute;
    top: 50%;
    right: get-spacing(tighter);
    margin-top: -($handle-size / 2);
  }

  @include halftone-bg('after');
}

///
/// Sortable behaviour

.StackedListItem--isDraggable {
  cursor: get-cursor(drag);

  // interaction
  &:focus {
    outline: none;
  }

  &:focus,
  &:hover {
    .StackedListContent {
      color: get-color(brand, blue);
      border-color: currentColor;
    }

    + .StackedListItem {
      .StackedListContent::before {
        background-color: get-color(brand, blue);
        opacity: 1;
      }
    }
  }

  &.draggable-source--is-dragging {
    .StackedListContent {
      color: get-color(brand, blue);
      border-color: currentColor;

      @include halftone-bg-animated('after');
    }

    + .StackedListItem,
    + .StackedListItem--isCloned + .StackedListItem {
      .StackedListContent::before {
        background-color: get-color(brand, blue);
        opacity: 1;
      }
    }
  }

  &.draggable-mirror {
    z-index: get-z-index(overlay);

    .StackedListContent {
      color: white;
      background-color: get-color(brand, blue);
      border-color: get-color(brand, blue);
      transform: scale(1.025);

      &::before,
      &::after {
        display: none;
      }

      .DragHandle {
        @include drag-handle-dragging;
      }
    }
  }
}
